@model FinalProject_LMS.ViewModels.TestVM
@{
    ViewBag.Title = "Test";
}
<div class=" jumbotron">
    <h2>Proceed For A Quiz</h2>

    @using (Html.BeginForm("ProceedTest", "Test", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()
        <div class="row">
            <div class="col-md-4">
                <label>Select Course</label>
                @Html.DropDownListFor(m => m.Test.Courseid, new SelectList(Model.CourseList, "Id", "Name"), "Select Course", htmlAttributes: new { @class = "chosen-select form-control", style = "height:35px", @required = "true", onChange = "Action(this.value)" })
            </div>
            <div class="col-md-4">
                <label>Select Quiz</label>
                <select class="form-control" style="height:33px" id="FL" name="Quizid">
                    <option>Select Quiz</option>
                </select>
            </div>
        </div>
        <hr />
        <div class="form-group">
            <div class="col-md-offset-4 col-md-10">
                <input type="submit" value="Next" class="col-md-4 btn btn-primary" />
            </div>
        </div>
        <input type="hidden" name="minid" value="0"/>
        <input type="hidden" name="count" value="1"/>
        @Html.HiddenFor(m => m.Test.Testid)
    }
</div>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
<script>
    function Action(code) {
        $.ajax({
            type: "GET",
            url: "/Test/ShowData?message=" + code,
            data: "{}",
            success: function (data) {
                var s = '<option>Select Quiz</option>';
                for (var i = 0; i < data.length; i++) {
                    s += '<option value="' + data[i].Quizid + '">' + data[i].QuizName + '</option>';
                }
                $('#FL').html(s);
            }
        });
    };
</script>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/coursenamevalidations")
    @Scripts.Render("~/bundles/message")
}
