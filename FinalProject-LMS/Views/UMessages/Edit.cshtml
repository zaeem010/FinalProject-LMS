@model FinalProject_LMS.Models.UMessage
<div class=" jumbotron">
    @{
        ViewBag.Title = "Edit";
    }

    <h2>Message</h2>


    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <h4>UMessage</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.Id)
            @Html.HiddenFor(model => model.SenderId)
            @Html.HiddenFor(model => model.ReciverId)

            @*<div class="form-group">
                    @Html.LabelFor(model => model.SenderId, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.SenderId, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.SenderId, "", new { @class = "text-danger" })
                    </div>
                </div>*@

            <div class="form-group">
                @Html.LabelFor(model => model.Rubrik, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextAreaFor(model => model.Rubrik, new { htmlAttributes = new { @readonly = "readonly", @class = "control-label col-md-2" } })
                    @Html.ValidationMessageFor(model => model.Rubrik, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Text, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextAreaFor(model => model.Text, new { htmlAttributes = new { @readonly = "readonly", @class = "control-label col-md-2" } })
                    @Html.ValidationMessageFor(model => model.Text, "", new { @class = "text-danger" })
                </div>
            </div>

            @*<div class="form-group">
                @Html.LabelFor(model => model.ReciverId, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ReciverId, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ReciverId, "", new { @class = "text-danger" })
                </div>*@
        </div>

        <div class="form-group hidden">
            @Html.LabelFor(model => model.IsReaden, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.IsReaden, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.IsReaden, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Back" class="btn btn-info" />
            </div>
        </div>

    }

    <div>
        @Html.ActionLink("Replay", "Create", "UMessages", new { ReciverId = Model.SenderId }, null)
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/message")
}

